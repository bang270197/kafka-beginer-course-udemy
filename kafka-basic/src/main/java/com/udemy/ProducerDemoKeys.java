package com.udemy;import org.apache.kafka.clients.producer.*;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import java.util.Properties;public class ProducerDemoKeys {    public static final Logger logger = LoggerFactory.getLogger(ProducerDemoWithCallBack.class.getName());    public static void main(String[] args) {        Properties props = new Properties();        props.put("bootstrap.servers", "127.0.0.1:9092");  // Kafka broker        props.put("key.serializer", "org.apache.kafka.common.serialization.StringSerializer");        props.put("value.serializer", "org.apache.kafka.common.serialization.StringSerializer");        props.put("partitioner.class", RoundRobinPartitioner.class.getName());        KafkaProducer<String, String> producer = new KafkaProducer<>(props);        //Kết luận: nếu cũng 1 key producer sẽ gửi cùng 1 partition        for (int j = 0; j < 2; j++){            for (int i = 0; i < 20; i++) {                String topic = "TOPIC-2";                String key = "KEY-" + i;                String value = "VALUE-" + i;                producer.send(new ProducerRecord<>(topic, key, value), new Callback() {                    @Override                    public void onCompletion(RecordMetadata recordMetadata, Exception e) {                        if (e == null){                            logger.info("----- key: {} | partition: {} -----", key, recordMetadata.partition());                        } else {                            logger.error("Error while sending message", e);                        }                    }                });            }            try {                Thread.sleep(500);            } catch (InterruptedException e) {                e.printStackTrace();            }        }        producer.flush();        producer.close();    }}